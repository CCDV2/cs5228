# action modules will be called subsequentially
actions: ["preprocess", "predict"]

scrap:
  gov_price: 
    url: "https://onemotoring.lta.gov.sg/content/onemotoring/home/buying/upfront-vehicle-costs/open-market-value--omv-.html"
    save_path: "./data/gov_price.csv"
    year_range: [2002, 2022]
preprocess:
  # preprocess data
  train: # file name under preprocess module
    # procedure will be like: update -> add -> drop
    
    # if path is not specified, then directly find correspond csv under ./data
    # path: "./data/train.csv"

    # if column name is not specified, then get its name as default
    reg_date: "reg_date_customized"

    make: "make_oh"
    # type_of_vehicle: "type_of_vehicle_oh"
    # category: "category_multilabel"

          
    _add: []
    
    # column name of the column to be deleted
    _drop: ["listing_id","title","description","fuel_type","opc_scheme","lifespan",
      "eco_category","features","accessories","indicative_price",
      "make", 
      "type_of_vehicle", 
      "category",
      # "transmission",
      "no_of_owners",
      # "road_tax",
      "mileage", 
      "model", "original_reg_date", "reg_date"]
    
    save_path: "./data/train_processed.csv"
  test:
    save_path: "./data/test_processed.csv"
  gov_price: 
    save_path: "./data/gov_price_processed.csv"
predict:
  dataset: "SimpleDataset"

  SimpleDataset:
    path: './data/train_processed.csv'
    seed: 0
    test_path: './data/test_processed.csv' # comment this line to make train-val split on trian set

  dataloader:
    batch_size: 128

  model: "GradientBoostingRegressionModel"

  LogisticRegressionModel:
    C: 1.0
    max_iter: 500
  GradientBoostingRegressionModel:
    learning_rate: 0.1
    n_estimators: 1000
  RandomForestRegressionModel:
    n_estimators: 1000
  MLPRegressionModel:
    epochs: 20
    lr: 0.00001
    momentum: 0.99
    MLP:
      dims: [96, 512, 128, 32]
  XGBoostRegressionModel:
    n_estimators: 1000
    subsample: 0.5
    eta: 0.15
    max_depth: 3
    colsample_bytree: 0.9
    # grid_params:
    #   n_estimators: [100, 150, 200, 250, 500, 750, 1000, 1250]
    #   subsample: [0.1, 0.25, 0.5, 0.75, 0.9, 1.0]
    #   eta: [0.01, 0.05, 0.1, 0.15, 0.2]
    #   max_depth: [3, 4, 5, 6, 7, 8, 9, 10]
      # colsample_bytree: [0.5, 0.6, 0.7, 0.8, 0.9, 1.0]
      # reg_alpha: [0, 0.25, 0.5, 0.75, 1]
      # reg_lambda: [0.2, 0.4, 0.6, 0.8, 1]


  
  metric: "MSE"
  MSE:
    squared: False
  dump_path: './data/predict.csv'